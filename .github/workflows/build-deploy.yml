name: Deploy Vanilla site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - uses: pnpm/action-setup@v2
      with:
        version: 9
    - name: Detect package manager
      id: detect-package-manager
      run: |
        if [ -f "${{ github.workspace }}/yarn.lock" ]; then
          echo "manager=yarn" >> $GITHUB_OUTPUT
          echo "command=install" >> $GITHUB_OUTPUT
          echo "runner=yarn" >> $GITHUB_OUTPUT
          exit 0
        elif [ -f "${{ github.workspace }}/package-lock.json" ]; then
          echo "manager=npm" >> $GITHUB_OUTPUT
          echo "command=ci" >> $GITHUB_OUTPUT
          echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          exit 0
        elif [ -f "${{ github.workspace }}/pnpm-lock.yaml" ]; then
          echo "manager=pnpm" >> $GITHUB_OUTPUT
          echo "command=install --no-frozen-lockfile" >> $GITHUB_OUTPUT
          echo "runner=pnpm" >> $GITHUB_OUTPUT
          exit 0
        else
          echo "Unable to determine packager manager"
          exit 1
        fi
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: "22"
        cache: ${{ steps.detect-package-manager.outputs.manager }}
    - name: Restore cache
      uses: actions/cache@v3
      with:
        path: |
          node_modules
          ~/.npm
        key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
        restore-keys: |
          ${{ runner.os }}-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/pnpm-lock.yaml') }}-
    - name: Install dependencies
      run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
    - name: Build
      run: ${{ steps.detect-package-manager.outputs.runner }} build
    - name: No jekyll build
      run: touch dist/.nojekyll
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v1
      with:
        path: ./dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
